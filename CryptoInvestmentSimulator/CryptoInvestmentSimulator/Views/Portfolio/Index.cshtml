@using CryptoInvestmentSimulator.Models.ViewModels;
@model UserModel
@{
    ViewData["Title"] = "Portfolio Page";

    // Reners required partial views in background.
    await Html.RenderPartialAsync("_EditDetails");
    await Html.RenderPartialAsync("_ConfirmReset");
}

<script src="~/js/time_zones.js"></script>
<script src="~/js/pages/portfolio.js"></script>

<div id="exception" class="text-center">  
    <div id="details-positions" class="row">
        <div class="col-4">
            <img src="@Model.Avatar" width="150" height="150" />

            <h3>Your account details</h3>
            <p> <strong>Username:</strong> @Model.Username </p>
            <p> <strong>Email:</strong> @Model.Email </p>
            <p> <strong>Time zone:</strong> @Model.TimeZone </p>

            <button id="edit" type="button" class="btn btn-primary" data-toggle="modal" data-target="#editDetailsModal">Edit details</button>
            <button id="reset" type="button" class="btn btn-danger" data-toggle="modal" data-target="#resetPortfolioModal">Reset portfolio</button>
        </div>

        <div class="col-8">
            <div id="investmentTableZone"></div>
        </div>
    </div>

    <div id="wallet-data" class="row">
        <div class="col-4">
            <div style="width: 100%; height: 100%;"> 
                <canvas id="myChart"></canvas> 
            </div>
        </div>

        <div class="col-8">
            <div class="row">
                <div class="col-6">
                    <div id="walletTableZone"></div>
                </div>
                <div class="col-6">
                    <table class="table rounded rounded-5 overflow-hidden table-striped table-sm table-dark">
                        <thead>
                            <tr>
                                <th scope="col">Total earnings</th>
                            </tr>
                        </thead>

                        <tbody>
                            <tr>
                                @if (ViewBag.TotalEarnings > 0)
                                {
                                    <td style="color: #7AB662">@ViewBag.TotalEarnings</td>
                                }
                                else
                                {
                                    <td style="color: #FF5050">@ViewBag.TotalEarnings</td>
                                }
                            </tr>
                        </tbody>
                    </table>

                    <table class="table rounded rounded-5 overflow-hidden table-striped table-sm table-dark">
                        <thead>
                            <tr>
                                <th scope="col">PNL (Profit & Loss)</th>
                            </tr>
                        </thead>

                        <tbody>
                            <tr>
                                @if (ViewBag.TotalEarnings > 0)
                                {
                                    <td style="color: #7AB662">@ViewBag.PNL</td>
                                }
                                else
                                {
                                    <td style="color: #FF5050">@ViewBag.PNL</td>
                                }
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('myChart');

        var percents = @Html.Raw(Json.Serialize(ViewBag.WalletPercent));
        var percentArray = [];
        for (var i = 0; i < 6; i++) {
            percentArray[i] = percents[i];
        }

        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['EUR', 'BTC', 'ETH', 'ADA', 'ATOM', 'DOGE'],
                datasets: [{
                    label: 'Wallet Dataset',
                    data: percentArray,
                    backgroundColor: [
                        '#AEB1B7',
                        '#7AB662',
                        '#62A4B6',
                        '#9E62B6',
                        '#7462B6',
                        '#B67462'
                    ],
                    hoverOffset: 2
                }]
            },
            options: {
            }
        });
    </script>
</div>
