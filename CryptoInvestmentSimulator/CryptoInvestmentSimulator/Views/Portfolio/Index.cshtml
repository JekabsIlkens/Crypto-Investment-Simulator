@using CryptoInvestmentSimulator.Models.ViewModels;
@model UserModel
@{
    ViewData["Title"] = "Portfolio Page";

    // Reners required partial views in background.
    await Html.RenderPartialAsync("_EditDetails");
    await Html.RenderPartialAsync("_ConfirmReset");
}

<script src="~/js/time_zones.js"></script>
<script src="~/js/pages/portfolio.js"></script>

<div class="text-center">
    <h1 class="display-4">Your Portfolio Page</h1>  

    <div class="row">
        <div class="col-4">
            <img src="@Model.Avatar" width="150" height="150" />

            <h3>Your account details</h3>
            <p> <strong>Username:</strong> @Model.Username </p>
            <p> <strong>Email:</strong> @Model.Email </p>
            <p> <strong>Time zone:</strong> @Model.TimeZone </p>

            <button id="edit" type="button" class="btn btn-primary" data-toggle="modal" data-target="#editDetailsModal">Edit</button>
            <button id="reset" type="button" class="btn btn-danger" data-toggle="modal" data-target="#resetPortfolioModal">Reset portfolio</button>
        </div>

        <div class="col-8">
            <div class="row">
                <div class="col-8">
                    <div id="walletTableZone"></div>
                </div>
                <div class="col-4">
                    <p>Total earnings: @ViewBag.TotalEarnings</p>
                    <p>PNL (Profit & Loss): @ViewBag.PNL</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-4">
            <div style="width: 100%; height: 100%;"> 
                <canvas id="myChart"></canvas> 
            </div>
        </div>

        <div class="col-8">
            <div id="investmentTableZone"></div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ctx = document.getElementById('myChart');

        var percents = @Html.Raw(Json.Serialize(ViewBag.WalletPercent));
        var percentArray = [];
        for (var i = 0; i < 6; i++) {
            percentArray[i] = percents[i];
        }

        new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ['EUR', 'BTC', 'ETH', 'ADA', 'ATOM', 'DOGE'],
                datasets: [{
                    label: 'Wallet Dataset',
                    data: percentArray,
                    backgroundColor: [
                        '#c9cbcf',
                        '#ff9f40',
                        '#36a2eb',
                        '#ff6384',
                        '#9966ff',
                        '#4bc0c0'
                    ],
                    hoverOffset: 2
                }]
            },
            options: {
            }
        });
    </script>
</div>
